{"version":3,"sources":["webpack://@bulletproof/client/./src/components/Home/Home.css?d870","webpack://@bulletproof/client/./src/components/Home/index.ts","webpack://@bulletproof/client/./src/components/Home/Home.tsx","webpack://@bulletproof/client/./src/generated/types.ts","webpack://@bulletproof/client/./src/components/Home/Home.css"],"names":["data","loading","error","useBooksQuery","className","books","nodes","map","book","key","id","to","title","author","name","created","lastChanged","BookDocument","gql","useBookQuery","baseOptions","Apollo","BooksDocument","___CSS_LOADER_EXPORT___","push","module"],"mappings":"qNAQa,IAAI,IALH,CAEd,OAAiB,OACjB,WAAoB,IAML,WAAf,MCVA,ECGuB,KACtB,MAAM,KAAEA,EAAF,QAAQC,EAAR,MAAiBC,IAAUC,UAEjC,OAAID,EAAc,2BAAMA,GACpBD,EAAgB,yCAGnB,uBAAKG,UAAU,QACd,uBAAKA,UAAU,aACbJ,aADF,EACEA,EAAMK,MAAMC,MAAMC,KAAKC,GACvB,uBAAKC,IAAKD,EAAKE,IACd,gBAAC,KAAD,CAAMC,GAAE,gBAAWH,EAAKE,KACvB,0BAAKF,EAAKI,QAEX,0BACC,gCAAQJ,EAAKK,OAAOC,MACpB,wCAAgBN,EAAKO,SACrB,wCAAgBP,EAAKQ,qB,qMCiJrB,MAAMC,GAAeC,QAAH,+JA8BlB,SAASC,EAAaC,GACrB,OAAOC,WAA+CJ,EAAcG,GAQrE,MAAME,GAAgBJ,QAAH,qPAmCnB,SAASf,EAAciB,GACtB,OAAOC,WAAiDC,EAAeF,K,8EC/O3EG,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOf,GAAI,uaAAwa,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,4CAA4C,MAAQ,GAAG,SAAW,iOAAiO,eAAiB,CAAC,waAAwa,WAAa,MAEttC","file":"392.bundle.js","sourcesContent":["import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js!./Home.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import Home from './Home'\n\nexport default Home\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useBooksQuery } from '../../generated/types'\nimport './Home.css'\n\nconst Home: React.FC = () => {\n\tconst { data, loading, error } = useBooksQuery()\n\n\tif (error) return <div>{error}</div>\n\tif (loading) return <div>Loading...</div>\n\n\treturn (\n\t\t<div className=\"Home\">\n\t\t\t<div className=\"container\">\n\t\t\t\t{data?.books.nodes.map((book) => (\n\t\t\t\t\t<div key={book.id}>\n\t\t\t\t\t\t<Link to={`/book/${book.id}`}>\n\t\t\t\t\t\t\t<h2>{book.title}</h2>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>By {book.author.name}</li>\n\t\t\t\t\t\t\t<li>Created at {book.created}</li>\n\t\t\t\t\t\t\t<li>Updated at {book.lastChanged}</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Home\n","import { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  DateTime: any;\n  Date: any;\n  Time: any;\n};\n\n\nexport type AuthData = {\n  __typename?: 'AuthData';\n  user: User;\n  token: Scalars['String'];\n  tokenExpiration: Scalars['String'];\n};\n\nexport type User = {\n  __typename?: 'User';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  email?: Maybe<Scalars['String']>;\n  joined: Scalars['DateTime'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createBook?: Maybe<Book>;\n  deleteBook?: Maybe<Scalars['ID']>;\n  signin?: Maybe<AuthData>;\n  signup?: Maybe<User>;\n  updateBook?: Maybe<Book>;\n};\n\n\nexport type MutationCreateBookArgs = {\n  title: Scalars['String'];\n};\n\n\nexport type MutationDeleteBookArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationSigninArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\n\nexport type MutationSignupArgs = {\n  name: Scalars['String'];\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\n\nexport type MutationUpdateBookArgs = {\n  id: Scalars['ID'];\n  title: Scalars['String'];\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  book?: Maybe<Book>;\n  books: BookConnection;\n  me?: Maybe<User>;\n};\n\n\nexport type QueryBookArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryBooksArgs = {\n  after?: Maybe<Scalars['String']>;\n  first: Scalars['Int'];\n  where?: Maybe<BooksWhereInput>;\n};\n\nexport type Book = {\n  __typename?: 'Book';\n  id: Scalars['ID'];\n  title: Scalars['String'];\n  author: User;\n  created: Scalars['DateTime'];\n  lastChanged: Scalars['DateTime'];\n};\n\nexport type BookConnection = {\n  __typename?: 'BookConnection';\n  edges: Array<BookEdge>;\n  nodes: Array<Book>;\n  pageInfo: PageInfo;\n};\n\nexport type BookEdge = {\n  __typename?: 'BookEdge';\n  node: Book;\n  cursor: Scalars['String'];\n};\n\nexport type BooksWhereInput = {\n  _id?: Maybe<Scalars['String']>;\n};\n\n\n\n\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  startCursor?: Maybe<Scalars['String']>;\n  endCursor?: Maybe<Scalars['String']>;\n  hasNextPage: Scalars['Boolean'];\n  hasPreviousPage: Scalars['Boolean'];\n};\n\nexport type BookQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type BookQuery = (\n  { __typename?: 'Query' }\n  & { book?: Maybe<(\n    { __typename?: 'Book' }\n    & Pick<Book, 'id' | 'title' | 'created' | 'lastChanged'>\n    & { author: (\n      { __typename?: 'User' }\n      & Pick<User, 'name'>\n    ) }\n  )> }\n);\n\nexport type BooksQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type BooksQuery = (\n  { __typename?: 'Query' }\n  & { books: (\n    { __typename?: 'BookConnection' }\n    & { nodes: Array<(\n      { __typename?: 'Book' }\n      & Pick<Book, 'id' | 'title' | 'created' | 'lastChanged'>\n      & { author: (\n        { __typename?: 'User' }\n        & Pick<User, 'name'>\n      ) }\n    )>, pageInfo: (\n      { __typename?: 'PageInfo' }\n      & Pick<PageInfo, 'endCursor' | 'hasNextPage'>\n    ) }\n  ) }\n);\n\n\nexport const BookDocument = gql`\n    query Book($id: ID!) {\n  book(id: $id) {\n    id\n    title\n    author {\n      name\n    }\n    created\n    lastChanged\n  }\n}\n    `;\n\n/**\n * __useBookQuery__\n *\n * To run a query within a React component, call `useBookQuery` and pass it any options that fit your needs.\n * When your component renders, `useBookQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useBookQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useBookQuery(baseOptions: Apollo.QueryHookOptions<BookQuery, BookQueryVariables>) {\n        return Apollo.useQuery<BookQuery, BookQueryVariables>(BookDocument, baseOptions);\n      }\nexport function useBookLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<BookQuery, BookQueryVariables>) {\n          return Apollo.useLazyQuery<BookQuery, BookQueryVariables>(BookDocument, baseOptions);\n        }\nexport type BookQueryHookResult = ReturnType<typeof useBookQuery>;\nexport type BookLazyQueryHookResult = ReturnType<typeof useBookLazyQuery>;\nexport type BookQueryResult = Apollo.QueryResult<BookQuery, BookQueryVariables>;\nexport const BooksDocument = gql`\n    query Books {\n  books(first: 2) {\n    nodes {\n      id\n      title\n      created\n      lastChanged\n      author {\n        name\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n    `;\n\n/**\n * __useBooksQuery__\n *\n * To run a query within a React component, call `useBooksQuery` and pass it any options that fit your needs.\n * When your component renders, `useBooksQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useBooksQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useBooksQuery(baseOptions?: Apollo.QueryHookOptions<BooksQuery, BooksQueryVariables>) {\n        return Apollo.useQuery<BooksQuery, BooksQueryVariables>(BooksDocument, baseOptions);\n      }\nexport function useBooksLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<BooksQuery, BooksQueryVariables>) {\n          return Apollo.useLazyQuery<BooksQuery, BooksQueryVariables>(BooksDocument, baseOptions);\n        }\nexport type BooksQueryHookResult = ReturnType<typeof useBooksQuery>;\nexport type BooksLazyQueryHookResult = ReturnType<typeof useBooksLazyQuery>;\nexport type BooksQueryResult = Apollo.QueryResult<BooksQuery, BooksQueryVariables>;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Home h2 {\\n\\tfont-weight: normal;\\n\\tfont-style: italic;\\n\\tmargin-bottom: 8px;\\n}\\n.Home h3 {\\n\\tcolor: rgba(0, 0, 0, 0.67);\\n\\tmargin-top: 0;\\n\\tfont-weight: lighter;\\n\\tfont-style: italic;\\n}\\n.Home p {\\n\\tline-height: 1.5;\\n\\tletter-spacing: 0.00938em;\\n\\tcolor: rgba(0, 0, 0, 0.87);\\n\\tfont-size: 1rem;\\n\\tword-break: break-word;\\n}\\n.Home .container {\\n\\tmargin: auto;\\n\\tmax-width: 1200px;\\n\\tpadding: 75px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Home/Home.css\"],\"names\":[],\"mappings\":\"AAAA;CACC,mBAAmB;CACnB,kBAAkB;CAClB,kBAAkB;AACnB;AACA;CACC,0BAA0B;CAC1B,aAAa;CACb,oBAAoB;CACpB,kBAAkB;AACnB;AACA;CACC,gBAAgB;CAChB,yBAAyB;CACzB,0BAA0B;CAC1B,eAAe;CACf,sBAAsB;AACvB;AACA;CACC,YAAY;CACZ,iBAAiB;CACjB,aAAa;AACd\",\"sourcesContent\":[\".Home h2 {\\n\\tfont-weight: normal;\\n\\tfont-style: italic;\\n\\tmargin-bottom: 8px;\\n}\\n.Home h3 {\\n\\tcolor: rgba(0, 0, 0, 0.67);\\n\\tmargin-top: 0;\\n\\tfont-weight: lighter;\\n\\tfont-style: italic;\\n}\\n.Home p {\\n\\tline-height: 1.5;\\n\\tletter-spacing: 0.00938em;\\n\\tcolor: rgba(0, 0, 0, 0.87);\\n\\tfont-size: 1rem;\\n\\tword-break: break-word;\\n}\\n.Home .container {\\n\\tmargin: auto;\\n\\tmax-width: 1200px;\\n\\tpadding: 75px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"sourceRoot":""}